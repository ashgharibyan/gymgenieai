// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique // The id is created by Kinde
  createdAt DateTime @default(now())
  email     String   @unique
  firstName String
  lastName  String
  profile   Profile?
}

model Profile {
  id                 Int                @id @default(autoincrement())
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  age                Int
  gender             Gender
  height             Float
  weight             Float
  activityLevel      ActivityLevel
  exerciseExperience ExerciseExperience
  userID             String             @unique
  user               User               @relation(fields: [userID], references: [id])
  goal               Goal?
  workoutPlan        WorkoutPlan?
}

model Goal {
  id                 Int                @id @default(autoincrement())
  profileId          Int                @unique
  profile            Profile            @relation(fields: [profileId], references: [id])
  goalType           PrimaryGoal
  targetWeight       Float
  workoutFrequency   WorkoutFrequency
  workoutDuration    WorkoutDuration
  locationPreference LocationPreference
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  progress           Progress[]
}

model Progress {
  id             Int      @id @default(autoincrement())
  goalId         Int
  goal           Goal     @relation(fields: [goalId], references: [id])
  progressWeight Float
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model WorkoutPlan {
  id        Int          @id @default(autoincrement())
  workouts  WorkoutDay[]
  profileId Int          @unique
  profile   Profile      @relation(fields: [profileId], references: [id])
}

model WorkoutDay {
  id            Int         @id @default(autoincrement())
  day           String
  workoutType   String
  exercises     Exercise[]
  notes         String
  WorkoutPlan   WorkoutPlan @relation(fields: [WorkoutPlanId], references: [id])
  WorkoutPlanId Int
}

model Exercise {
  id           Int        @id @default(autoincrement())
  name         String
  sets         Int
  reps         String
  WorkoutDay   WorkoutDay @relation(fields: [workoutDayId], references: [id])
  workoutDayId Int
}

enum Gender {
  MALE
  FEMALE
}

enum PrimaryGoal {
  WEIGHT_LOSS
  WEIGHT_GAIN
  MUSCLE_GAIN
  IMPROVE_ENDURANCE
  INCREASE_FLEXIBILITY
}

enum ActivityLevel {
  SEDENTARY
  LIGHTLY_ACTIVE
  MODERATELY_ACTIVE
  VERY_ACTIVE
}

enum ExerciseExperience {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum WorkoutFrequency {
  ONE_DAY
  TWO_DAYS
  THREE_DAYS
  FOUR_DAYS
  FIVE_DAYS
  SIX_DAYS
  SEVEN_DAYS
}

enum WorkoutDuration {
  THIRTY_MINUTES
  FORTY_FIVE_MINUTES
  SIXTY_MINUTES
  NINETY_MINUTES
}

enum LocationPreference {
  HOME
  GYM
}

enum GoalStatus {
  ACTIVE
  COMPLETED
}
